{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,mCAA8E;AAC9E,mCAAyC;AAE5B,QAAA,KAAK,qBAAc,gBAAQ,EAAK,mBAAW,EAAK,qBAAa,EAAE;AAC/D,QAAA,OAAO,GAAU,EAAE,CAAC;AAEjC,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,aAAK,CAAe,EAAE;IACvD,MAAM,QAAQ,GAAG,wBAAgB,CAAC,QAAQ,CAAC,CAAC;IAE5C,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;QAC1D,eAAO,CAAC,QAAQ,CAAC,GAAG,aAAK,CAAC,QAAQ,CAAC,CAAC;KACrC;CACF;AAED,eAAO,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;AACtC,eAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC","sourcesContent":["import {RuleName, Rules, allRules, customRules, prettierRules} from './rules';\nimport {findRuleMetadata} from './utils';\n\nexport const rules: Rules = {...allRules, ...customRules, ...prettierRules};\nexport const jsRules: Rules = {};\n\nfor (const ruleName of Object.keys(rules) as RuleName[]) {\n  const metadata = findRuleMetadata(ruleName);\n\n  if (!metadata.typescriptOnly && !metadata.requiresTypeInfo) {\n    jsRules[ruleName] = rules[ruleName];\n  }\n}\n\njsRules['no-require-imports'] = false;\njsRules['switch-default'] = true;\n"]}