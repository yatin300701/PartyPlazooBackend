"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const prettier_1 = require("prettier");
function fileExists(filename) {
    try {
        fs.accessSync(filename, fs.constants.F_OK);
        return true;
    }
    catch (_a) {
        return false;
    }
}
function readJsonFile(filename) {
    if (fileExists(filename)) {
        return JSON.parse(fs.readFileSync(filename, { encoding: 'utf8' }));
    }
    return {};
}
function writeJsonFile(filename, json, force) {
    if (force || !fileExists(filename)) {
        const data = `${prettier_1.format(JSON.stringify(json), Object.assign({}, readJsonFile('.prettierrc'), { parser: 'json' }))}`;
        fs.writeFileSync(filename, data, { encoding: 'utf8' });
        console.log(`OK: '${filename}' file created.`);
    }
    else {
        throw new Error(`'${filename}' file already exists.`);
    }
}
exports.writeJsonFile = writeJsonFile;
//# sourceMappingURL=write-json-file.js.map